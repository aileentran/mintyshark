[{"/Users/aileen/coding/mintyshark/src/App.js":"1","/Users/aileen/coding/mintyshark/src/Components/DisbursementDate.js":"2","/Users/aileen/coding/mintyshark/src/Components/InterestRate.js":"3","/Users/aileen/coding/mintyshark/src/Components/FutureDate.js":"4","/Users/aileen/coding/mintyshark/src/Components/LoanForm.js":"5","/Users/aileen/coding/mintyshark/src/Components/Calculations.js":"6","/Users/aileen/coding/mintyshark/src/Components/IndLoanForm.js":"7"},{"size":290,"mtime":1611181146083,"results":"8","hashOfConfig":"9"},{"size":140,"mtime":1611096251166,"results":"10","hashOfConfig":"9"},{"size":128,"mtime":1611096311789,"results":"11","hashOfConfig":"9"},{"size":246,"mtime":1611096628527,"results":"12","hashOfConfig":"9"},{"size":183,"mtime":1611266372043,"results":"13","hashOfConfig":"9"},{"size":152,"mtime":1611183790756,"results":"14","hashOfConfig":"9"},{"size":3325,"mtime":1611266589521,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"gpcc0g",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"/Users/aileen/coding/mintyshark/src/App.js",["31","32"],"/Users/aileen/coding/mintyshark/src/Components/DisbursementDate.js",[],"/Users/aileen/coding/mintyshark/src/Components/InterestRate.js",[],"/Users/aileen/coding/mintyshark/src/Components/FutureDate.js",[],"/Users/aileen/coding/mintyshark/src/Components/LoanForm.js",[],"/Users/aileen/coding/mintyshark/src/Components/Calculations.js",[],"/Users/aileen/coding/mintyshark/src/Components/IndLoanForm.js",["33"],"import React, {Component} from \"react\"\n\nclass IndLoanForm extends Component {\n  constructor() {\n    super()\n    this.state = {\n      loanName: \"\",\n      amtBorrowed: \"\",\n      disbursementDate: \"\",\n      interestRate: \"\",\n      futureDate:\"\"\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  // TODO: convert necessary states into nums?\n  // Convert interest number into actual num NOPE! every input / 100\n  handleChange(event) {\n    const {name, value} = event.target\n    name === \"amtBorrowed\" || name === \"interestRate\" ?\n    this.setState({ [name]: Number(value) }) :\n    this.setState({ [name] : value })\n  }\n\n  // TODO: sum all loans\n  handleSubmit(event){\n    event.preventDefault()\n    // Calculations for INDIVIDUAL loans\n    const disbursementDate = new Date(this.state.disbursementDate)\n    const futureDate = new Date(this.state.futureDate)\n    const diffInTime = futureDate.getTime() - disbursementDate.getTime()\n    const diffInDays = diffInTime / (1000 * 3600 * 24)\n\n    //  convert interest rate into number by /100\n    const dailyInterest = this.state.interestRate / 365 / 100\n\n    const amtAccrued = dailyInterest * diffInDays * this.state.amtBorrowed\n\n    const total = amtAccrued + this.state.amtBorrowed\n  }\n\n  render() {\n    return (\n      <div>\n        <form className=\"loan-form\" onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            name=\"loanName\"\n            placeholder=\"Loan Name\"\n            value={this.state.loanName}\n            onChange={this.handleChange}\n          />\n\n\n          {/* TODO: currency format */}\n          <input\n            type=\"text\"\n            name=\"amtBorrowed\"\n            placeholder=\"Amount Borrowed\"\n            value={this.state.amtBorrowed}\n            onChange={this.handleChange}\n          />\n\n          <label>\n            Disbursement Date\n            <input\n              type=\"date\"\n              name=\"disbursementDate\"\n              value={this.state.disbursementDate}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          {/* TODO: Percentage format */}\n          <input\n            type=\"text\"\n            name=\"interestRate\"\n            placeholder=\"Interest Rate\"\n            value={this.state.interestRate}\n            onChange={this.handleChange}\n          />\n\n          <label>\n            Future Date\n            <input\n              type=\"date\"\n              name=\"futureDate\"\n              value={this.state.futureDate}\n              onChange={this.handleChange}\n            />\n          </label>\n          <br />\n          <button>Calculate!</button>\n        </form>\n\n        <div className=\"input-values\">\n          <p>Loan name: {this.state.loanName}</p>\n          <p>Amount Borrowed: {typeof this.state.amtBorrowed}</p>\n          <p>Disbursement Date: {this.state.disbursementDate}</p>\n          <p>Interest Rate: {typeof this.state.interestRate} {this.state.interestRate}</p>\n          <p>Future Date ðŸ”®: {this.state.futureDate}</p>\n          <p>A snapshot in the future: graduation date, 5 years in the future, 10 years, etc!</p>\n        </div>\n\n        {/* TODO: calulations and return values */}\n        <div className=\"calculations\">\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default IndLoanForm\n",{"ruleId":"34","severity":1,"message":"35","line":6,"column":11,"nodeType":"36","messageId":"37","endLine":6,"endColumn":15},{"ruleId":"34","severity":1,"message":"38","line":6,"column":17,"nodeType":"36","messageId":"37","endLine":6,"endColumn":24},{"ruleId":"34","severity":1,"message":"39","line":40,"column":11,"nodeType":"36","messageId":"37","endLine":40,"endColumn":16},"no-unused-vars","'name' is assigned a value but never used.","Identifier","unusedVar","'setName' is assigned a value but never used.","'total' is assigned a value but never used."]