[{"/Users/aileen/coding/mintyshark/src/App.js":"1","/Users/aileen/coding/mintyshark/src/Components/LoanForm.js":"2","/Users/aileen/coding/mintyshark/src/Components/IndLoanForm.js":"3","/Users/aileen/coding/mintyshark/src/reportWebVitals.js":"4","/Users/aileen/coding/mintyshark/src/index.js":"5","/Users/aileen/coding/mintyshark/src/Components/AddAndDeleteLoans.js":"6"},{"size":248,"mtime":1611269307110,"results":"7","hashOfConfig":"8"},{"size":1798,"mtime":1614644786962,"results":"9","hashOfConfig":"8"},{"size":4292,"mtime":1614299674004,"results":"10","hashOfConfig":"8"},{"size":362,"mtime":1611094612029,"results":"11","hashOfConfig":"8"},{"size":500,"mtime":1611094612028,"results":"12","hashOfConfig":"8"},{"size":1428,"mtime":1614644766646,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"gpcc0g",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/aileen/coding/mintyshark/src/App.js",["28"],"/Users/aileen/coding/mintyshark/src/Components/LoanForm.js",[],"/Users/aileen/coding/mintyshark/src/Components/IndLoanForm.js",["29"],"import React, {Component} from \"react\"\n\nclass IndLoanForm extends Component {\n  constructor() {\n    super()\n    this.state = {\n      loanName: \"\",\n      amtBorrowed: \"\",\n      disbursementDate: \"\",\n      interestRate: \"\",\n      gradDate: \"\",\n      paymentPlan: \"\",\n      loanAccrued: 0,\n      loanTotal: 0,\n      subLoans: [{\n        loanName: \"\",\n        amtBorrowed: \"\",\n        disbursementDate: \"\",\n        interestRate: \"\",\n        isSubsidized: false,\n        gradDate: \"\",\n        loanAccrued: 0,\n        loanTotal: 0\n      }]\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.addSubLoan = this.addSubLoan.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handleChange(event) {\n    const {name, value, type, checked} = event.target\n    type === \"checkbox\" ? this.setState({ [name] : checked }) : this.setState({ [name] : value })\n  }\n  // TODO: Fix this! current changes affect all new individual loans.\n  // NOTE: moved previous, problematic dynamic lines to SubLoan.js\n  addSubLoan(event) {\n    this.setState((prevState) => ({\n      subLoans:[...prevState.subLoans,\n        {\n          loanName: \"\",\n          amtBorrowed: \"\",\n          disbursementDate: \"\",\n          interestRate: \"\",\n          isSubsidized: false,\n          gradDate: \"\",\n          loanAccrued: 0,\n          loanTotal: 0\n        }\n      ]\n    }))\n  }\n\n  handleSubmit(event){\n    event.preventDefault()\n    // Calculations for INDIVIDUAL loans\n    const disbursementDate = new Date(this.state.disbursementDate)\n    const gradDate = new Date(this.state.gradDate)\n    const diffInTime = gradDate.getTime() - disbursementDate.getTime()\n    const diffInDays = diffInTime / (1000 * 3600 * 24)\n\n    //  convert interest rate into number by /100\n    const dailyInterest = Number(this.state.interestRate) / 365 / 100\n\n    const amtAccrued = this.state.isSubsidized ? 0 : dailyInterest * diffInDays * Number(this.state.amtBorrowed)\n\n    const total = amtAccrued + Number(this.state.amtBorrowed)\n\n    this.setState({\n      loanAccrued: amtAccrued,\n      loanTotal : total\n    })\n  }\n\n  render() {\n    let {subLoans} = this.state\n    return (\n      <div>\n        <form className=\"loan-form\" onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            name=\"loanName\"\n            placeholder=\"Loan Name\"\n            value={this.state.loanName}\n            onChange={this.handleChange}\n          />\n\n          {/* TODO: currency format */}\n          <input\n            type=\"text\"\n            name=\"amtBorrowed\"\n            placeholder=\"Amount Borrowed\"\n            value={this.state.amtBorrowed}\n            onChange={this.handleChange}\n          />\n\n          <label>Disbursement Date</label>\n            <input\n              type=\"date\"\n              name=\"disbursementDate\"\n              value={this.state.disbursementDate}\n              onChange={this.handleChange}\n            />\n\n          {/* TODO: Percentage format */}\n          <input\n            type=\"text\"\n            name=\"interestRate\"\n            placeholder=\"Interest Rate\"\n            value={this.state.interestRate}\n            onChange={this.handleChange}\n          />\n\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"isSubsidized\"\n              checked={this.state.isSubsidized}\n              onChange={this.handleChange}\n            /> Subsidized?\n          </label>\n\n          {/*<button onClick={this.addSubLoan}>âž•</button>*/}\n          {/* <button>ðŸ—‘</button> */}\n          {/* TODO: remove calculating individual loans */}\n          <button>Calculate individual loan</button>\n          {/* <input type=\"submit\" value=\"Submit\" /> */}\n          <br />\n        </form>\n\n\n        <div className=\"input-values\">\n          <p>Loan name: {this.state.loanName}</p>\n          <p>Amount Borrowed: {this.state.amtBorrowed}</p>\n          <p>Disbursement Date: {this.state.disbursementDate}</p>\n          <p>Interest Rate: {this.state.interestRate}</p>\n          {console.log(this.state.isSubsidized)}\n        </div>\n\n        <div className=\"calculations\">\n          <p>Loan Accrual: {this.state.loanAccrued}</p>\n          <p>Total cost of {this.state.loanName}: {this.state.loanTotal}</p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default IndLoanForm\n","/Users/aileen/coding/mintyshark/src/reportWebVitals.js",[],["30","31"],"/Users/aileen/coding/mintyshark/src/index.js",[],"/Users/aileen/coding/mintyshark/src/Components/AddAndDeleteLoans.js",[],{"ruleId":"32","severity":1,"message":"33","line":1,"column":16,"nodeType":"34","messageId":"35","endLine":1,"endColumn":24},{"ruleId":"32","severity":1,"message":"36","line":76,"column":10,"nodeType":"34","messageId":"35","endLine":76,"endColumn":18},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'subLoans' is assigned a value but never used.","no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-global-assign","no-unsafe-negation"]